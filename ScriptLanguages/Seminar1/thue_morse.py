"""
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é —á–∏—Å–ª–æ, –±–∏—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
–∫–æ—Ç–æ—Ä–æ–≥–æ —è–≤–ª—è–µ—Ç—Å—è ùëò-—Ç—ã–º —á–ª–µ–Ω–æ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ú–æ—Ä—Å–∞‚Äì–¢—É—ç (–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å OEIS –Ω–æ–º–µ—Ä
A010060, https://en.wikipedia.org/wiki/Thue-Morse_sequence). –ó–Ω–∞—á–µ–Ω–∏–µ ùëò –ø–æ–ª–∞–≥–∞–π—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º—ã–º
—Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º, –±–æ–ª—å—à–∏–º –ª–∏–±–æ —Ä–∞–≤–Ω—ã–º –Ω—É–ª—è.
–ü–æ–¥—Å–∫–∞–∑–∫–∞. –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª–µ–∑–Ω–æ–π –±—É–¥–µ—Ç —ç—Ç–∞ —Å—Å—ã–ª–∫–∞: https://stackoverflow.com/a/12790495.
–ó–∞–º–µ—á–∞–Ω–∏–µ. –ü—Ä–æ–≥—Ä–∞–º–º—É —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ —Ñ–∞–π–ª–µ thue_morse.py, —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞–∑–æ–≤–∏—Ç–µ get_sequence_item.
–û –±—ã—Å—Ç—Ä–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–æ—Å—Ç–∞ —á–∏—Å–ª–∞ –Ω–µ –±–µ—Å–ø–æ–∫–æ–π—Ç–µ—Å—å. –ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –≤ —Ä–µ—à–µ–Ω–∏–∏ –æ–±–æ–π—Ç–∏—Å—å –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
—Å—Ç—Ä–æ–∫ –∏ —Å–ø–∏—Å–∫–æ–≤ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —á–∏—Å–ª–∞–º–∏.
"""


def get_inversion(num):
    deegre = num.bit_length()
    inversion = 2 ** (deegre + 1) - 1 - num
    # print({num : bin(num), inversion : bin(inversion)})
    return inversion


def get_sequence_item(k):
    # st = 0
    number = 0
    if k == 0:
        return 0
    for i in range(1, k + 1):
        tail = get_inversion(number)
        res = (number << (2 ** (i-1))) + tail
        # print({'k-term' : i, number : bin(number), tail : bin(tail), 'Result' : bin(res)})  # we can see number, inversed tail and result
        number = res
    return number
